<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Objetos 3D en Three.js</title>
</head>
<body>
    <div id="canvas-container"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script>
        // Variables globales
        let scene, camera, renderer;

        function createObject(geometry, material, x, y, z, scale) {
            const object = new THREE.Mesh(geometry, material);
            object.position.set(x, y, z);
            object.scale.set(scale, scale, scale);
            scene.add(object);
            return object;
        }

        // Configurar la escena
        function init() {
            // Escena
            scene = new THREE.Scene();

            // Cámara
            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            camera.position.z = 10;

            // Renderizador
            renderer = new THREE.WebGLRenderer();
            renderer.setSize(window.innerWidth, window.innerHeight);
            document.getElementById("canvas-container").appendChild(renderer.domElement);

            // Luz puntual
            const light = new THREE.PointLight(0xffffff, 1, 100);
            light.position.set(0, 0, 5);
            scene.add(light);

            // Distancia entre objetos
            const spacing = 3;

            // Escala de los objetos
            const objectScale = 0.5;

            // Objeto 3D (tetraedro rojo)
            const geometryTetrahedron = new THREE.TetrahedronGeometry(2);
            const materialTetrahedron = new THREE.MeshPhongMaterial({ color: 0xff0000, flatShading: true });
            createObject(geometryTetrahedron, materialTetrahedron, -spacing * 2, 0, 0, objectScale);

            // Objeto 3D (cubo azul)
            const geometryCube = new THREE.BoxGeometry(1.5, 1.5, 1.5);
            const materialCube = new THREE.MeshPhongMaterial({ color: 0x0000ff, flatShading: true });
            createObject(geometryCube, materialCube, -spacing, 0, 0, objectScale);

            // Objeto 3D (cono verde)
            const geometryCone = new THREE.ConeGeometry(1, 3, 32);
            const materialCone = new THREE.MeshPhongMaterial({ color: 0x00ff00, flatShading: true });
            createObject(geometryCone, materialCone, 0, 0, 0, objectScale);

            // Objeto 3D (esfera amarilla)
            const geometrySphere = new THREE.SphereGeometry(1.5, 32, 32);
            const materialSphere = new THREE.MeshPhongMaterial({ color: 0xffff00, flatShading: true });
            createObject(geometrySphere, materialSphere, spacing, 0, 0, objectScale);

            // Objeto 3D (toroide rosa)
            const geometryTorus = new THREE.TorusGeometry(1, 0.5, 32, 32);
            const materialTorus = new THREE.MeshPhongMaterial({ color: 0xff00ff, flatShading: true });
            createObject(geometryTorus, materialTorus, spacing * 2, 0, 0, objectScale);

            // Objeto 3D (dodecaedro amarillo)
            const geometryDodecahedron = new THREE.DodecahedronGeometry(1.5);
            const materialDodecahedron = new THREE.MeshPhongMaterial({ color: 0xffff00, flatShading: true });
            createObject(geometryDodecahedron, materialDodecahedron, spacing * 3, 0, 0, objectScale);
        }

        // Animación
        function animate() {
            requestAnimationFrame(animate);

            // Hacer que los objetos roten
            scene.traverse((object) => {
                if (object instanceof THREE.Mesh) {
                    object.rotation.x += 0.01;
                    object.rotation.y += 0.01;
                }
            });

            renderer.render(scene, camera);
        }

        // Inicializar y comenzar la animación
        init();
        animate();
    </script>
</body>
</html>

